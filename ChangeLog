Version       Contents
v00.01.00     First Octave release containing PSS, SSS, CRS, and PBCH
              transmission and reception for FDD
v00.02.00     Octave release with fixes in the license statement and a
              bug fix in lte_fdd_dl_receive.m
v00.03.00     Octave release with support for PDSCH transmission and
              reception for SIB1 encoding/decoding.  This includes
              turbo encoding/decoding.
v00.04.00     First release with C++ gnuradio support.  Contains PSS
              SSS, CRS, and PBCH reception for FDD in C++ for gnuradio.
v00.05.00     C++ changes: Fixed bug in frequency offset removal,
              added PDSCH reception for SIB1 decoding (including turbo
              decoding).
              Octave changes: Fixed bug in 3 antenna spacial multiplexing
              (lte_layer_mapper).  Fixed bug in 16QAM
              (lte_modulation_mapper).  Fixed parameter conversions in
              SIB1 unpacking.
v00.05.01     Fixed two bugs in liblte_phy.cc.  One relating to symb_starts
              going negative in find_pss_and_fine_timing.  One relating to
              using sss_re_5 instead of sss_im_5 in find_sss.
v00.05.02     Fixed another bug in liblte_phy.cc relating to frame_start_idx
              going negative in find_sss.
v00.05.03     Added more DL transmit functionality, rearranged liblte_phy to
              match the specs, and fixed several bugs: 1) frame_start_idx
              going negative in find_sss, 2) PDCCH sizes were too small,
              3) PDCCH reg calculation was wrong, 4) rate match/unmatch bit
              packing, 5) I/Q swap in LTE_fdd_dl_file_scan.
v00.05.04     Fixed bugs in liblte_phy.cc in turbo_decode, rate_unmatch_turbo,
              pdsch_channel_encode, and pdcch_channel_encode.  Added number of
              bits used to SIB1 pack in liblte_rrc.cc.
v00.06.00     Enabled fftw input, output, and plan from phy_struct in liblte_phy.
              Added BER tolerance to CFI decoding.  Added a new gnuradio app
              for generating an I/Q file with PSS, SSS, CRS, PBCH, PDCCH, and
              PDSCH.
